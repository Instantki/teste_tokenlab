// Mocks generated by Mockito 5.0.15 from annotations
// in teste_tokenlab/test/data/repository/movie_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_tokenlab/data/cache/data_source/movie_cds.dart' as _i4;
import 'package:teste_tokenlab/data/cache/models/movie_cm.dart' as _i6;
import 'package:teste_tokenlab/data/cache/models/movie_detail_cm.dart' as _i7;
import 'package:teste_tokenlab/data/remote/data_source/movie_rds.dart' as _i8;
import 'package:teste_tokenlab/data/remote/models/movie_detail_rm.dart' as _i3;
import 'package:teste_tokenlab/data/remote/models/movie_rm.dart' as _i9;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeDio_0 extends _i1.Fake implements _i2.Dio {}

class _FakeMovieDetailRm_1 extends _i1.Fake implements _i3.MovieDetailRm {}

/// A class which mocks [MovieCds].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieCds extends _i1.Mock implements _i4.MovieCds {
  MockMovieCds() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> isMoviesBoxEmpty() =>
      (super.noSuchMethod(Invocation.method(#isMoviesBoxEmpty, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<void> addAllMovies(List<_i6.MovieCm>? movieList) =>
      (super.noSuchMethod(Invocation.method(#addAllMovies, [movieList]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<List<_i6.MovieCm>> fetchAllMovies() =>
      (super.noSuchMethod(Invocation.method(#fetchAllMovies, []),
              returnValue: Future<List<_i6.MovieCm>>.value(<_i6.MovieCm>[]))
          as _i5.Future<List<_i6.MovieCm>>);
  @override
  _i5.Future<bool> isMovieInBox(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#isMovieInBox, [movieId]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<void> addMovie(_i7.MovieDetailCm? movieDetail) =>
      (super.noSuchMethod(Invocation.method(#addMovie, [movieDetail]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<_i7.MovieDetailCm?> fetchMovieDetail(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#fetchMovieDetail, [movieId]),
              returnValue: Future<_i7.MovieDetailCm?>.value())
          as _i5.Future<_i7.MovieDetailCm?>);
  @override
  _i5.Future<void> addFavorite(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#addFavorite, [movieId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> removeFavorite(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#removeFavorite, [movieId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<List<int>> fetchFavorites() => (super.noSuchMethod(
      Invocation.method(#fetchFavorites, []),
      returnValue: Future<List<int>>.value(<int>[])) as _i5.Future<List<int>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieRds].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRds extends _i1.Mock implements _i8.MovieRds {
  MockMovieRds() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio_0())
          as _i2.Dio);
  @override
  _i5.Future<List<_i9.MovieRm>> fetchMovies() =>
      (super.noSuchMethod(Invocation.method(#fetchMovies, []),
              returnValue: Future<List<_i9.MovieRm>>.value(<_i9.MovieRm>[]))
          as _i5.Future<List<_i9.MovieRm>>);
  @override
  _i5.Future<_i3.MovieDetailRm> fetchMovieDetail(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#fetchMovieDetail, [movieId]),
              returnValue:
                  Future<_i3.MovieDetailRm>.value(_FakeMovieDetailRm_1()))
          as _i5.Future<_i3.MovieDetailRm>);
  @override
  String toString() => super.toString();
}
