// Mocks generated by Mockito 5.4.1 from annotations
// in teste_tokenlab/test/presentation/movies/detail/detail_view_bloc_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:domain/data_repositories/movie_data_repository.dart' as _i2;
import 'package:domain/entities/movie_detail.dart' as _i3;
import 'package:domain/use_cases/add_favorite_uc.dart' as _i7;
import 'package:domain/use_cases/get_movie_detail_uc.dart' as _i4;
import 'package:domain/use_cases/remove_favorite_uc.dart' as _i8;
import 'package:domain/use_cases/update_movie_favorite_uc.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDataRepository_0 extends _i1.SmartFake
    implements _i2.MovieDataRepository {
  _FakeMovieDataRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetail_1 extends _i1.SmartFake implements _i3.MovieDetail {
  _FakeMovieDetail_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetMovieDetailUc].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetailUc extends _i1.Mock implements _i4.GetMovieDetailUc {
  MockGetMovieDetailUc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieDataRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieDataRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MovieDataRepository);
  @override
  _i5.Future<_i3.MovieDetail> getRawFuture(
          {required _i4.GetMovieDetailUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.MovieDetail>.value(_FakeMovieDetail_1(
          this,
          Invocation.method(
            #getRawFuture,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.MovieDetail>);
  @override
  _i5.Future<_i3.MovieDetail> getFuture(
          {required _i4.GetMovieDetailUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<_i3.MovieDetail>.value(_FakeMovieDetail_1(
          this,
          Invocation.method(
            #getFuture,
            [],
            {#params: params},
          ),
        )),
      ) as _i5.Future<_i3.MovieDetail>);
}

/// A class which mocks [UpdateMovieFavoriteUc].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateMovieFavoriteUc extends _i1.Mock
    implements _i6.UpdateMovieFavoriteUc {
  MockUpdateMovieFavoriteUc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieDataRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieDataRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MovieDataRepository);
  @override
  _i5.Future<void> getRawFuture(
          {required _i6.UpdateMovieFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> getFuture(
          {required _i6.UpdateMovieFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AddFavoriteUc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddFavoriteUc extends _i1.Mock implements _i7.AddFavoriteUc {
  MockAddFavoriteUc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieDataRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieDataRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MovieDataRepository);
  @override
  _i5.Future<void> getRawFuture({required _i7.AddFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> getFuture({required _i7.AddFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [RemoveFavoriteUc].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFavoriteUc extends _i1.Mock implements _i8.RemoveFavoriteUc {
  MockRemoveFavoriteUc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieDataRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeMovieDataRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.MovieDataRepository);
  @override
  _i5.Future<void> getRawFuture(
          {required _i8.RemoveFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> getFuture({required _i8.RemoveFavoriteUcParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFuture,
          [],
          {#params: params},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
