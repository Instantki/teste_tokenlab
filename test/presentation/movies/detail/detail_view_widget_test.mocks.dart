// Mocks generated by Mockito 5.4.1 from annotations
// in teste_tokenlab/test/presentation/movies/detail/detail_view_widget_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:domain/use_cases/add_favorite_uc.dart' as _i4;
import 'package:domain/use_cases/get_movie_detail_uc.dart' as _i2;
import 'package:domain/use_cases/remove_favorite_uc.dart' as _i5;
import 'package:domain/use_cases/update_movie_favorite_uc.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:re_state_action/re_state_action.dart' as _i10;
import 'package:rxdart/rxdart.dart' as _i6;
import 'package:teste_tokenlab/presentation/movies/detail/detail_view_bloc.dart'
    as _i8;
import 'package:teste_tokenlab/presentation/movies/detail/detail_view_state.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetMovieDetailUc_0 extends _i1.SmartFake
    implements _i2.GetMovieDetailUc {
  _FakeGetMovieDetailUc_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateMovieFavoriteUc_1 extends _i1.SmartFake
    implements _i3.UpdateMovieFavoriteUc {
  _FakeUpdateMovieFavoriteUc_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddFavoriteUc_2 extends _i1.SmartFake implements _i4.AddFavoriteUc {
  _FakeAddFavoriteUc_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveFavoriteUc_3 extends _i1.SmartFake
    implements _i5.RemoveFavoriteUc {
  _FakeRemoveFavoriteUc_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompositeSubscription_4 extends _i1.SmartFake
    implements _i6.CompositeSubscription {
  _FakeCompositeSubscription_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailViewState_5 extends _i1.SmartFake
    implements _i7.DetailViewState {
  _FakeDetailViewState_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DetailViewBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailViewBloc extends _i1.Mock implements _i8.DetailViewBloc {
  MockDetailViewBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get movieId => (super.noSuchMethod(
        Invocation.getter(#movieId),
        returnValue: 0,
      ) as int);
  @override
  _i2.GetMovieDetailUc get getMovieDetailUc => (super.noSuchMethod(
        Invocation.getter(#getMovieDetailUc),
        returnValue: _FakeGetMovieDetailUc_0(
          this,
          Invocation.getter(#getMovieDetailUc),
        ),
      ) as _i2.GetMovieDetailUc);
  @override
  _i3.UpdateMovieFavoriteUc get updateMovieFavoriteUc => (super.noSuchMethod(
        Invocation.getter(#updateMovieFavoriteUc),
        returnValue: _FakeUpdateMovieFavoriteUc_1(
          this,
          Invocation.getter(#updateMovieFavoriteUc),
        ),
      ) as _i3.UpdateMovieFavoriteUc);
  @override
  _i4.AddFavoriteUc get addFavoriteUc => (super.noSuchMethod(
        Invocation.getter(#addFavoriteUc),
        returnValue: _FakeAddFavoriteUc_2(
          this,
          Invocation.getter(#addFavoriteUc),
        ),
      ) as _i4.AddFavoriteUc);
  @override
  _i5.RemoveFavoriteUc get removeFavoriteUc => (super.noSuchMethod(
        Invocation.getter(#removeFavoriteUc),
        returnValue: _FakeRemoveFavoriteUc_3(
          this,
          Invocation.getter(#removeFavoriteUc),
        ),
      ) as _i5.RemoveFavoriteUc);
  @override
  _i6.CompositeSubscription get subscriptions => (super.noSuchMethod(
        Invocation.getter(#subscriptions),
        returnValue: _FakeCompositeSubscription_4(
          this,
          Invocation.getter(#subscriptions),
        ),
      ) as _i6.CompositeSubscription);
  @override
  _i7.DetailViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDetailViewState_5(
          this,
          Invocation.getter(#state),
        ),
      ) as _i7.DetailViewState);
  @override
  _i9.Stream<_i7.DetailViewState> get stateStream => (super.noSuchMethod(
        Invocation.getter(#stateStream),
        returnValue: _i9.Stream<_i7.DetailViewState>.empty(),
      ) as _i9.Stream<_i7.DetailViewState>);
  @override
  _i9.Stream<_i7.DetailViewAction> get actionStream => (super.noSuchMethod(
        Invocation.getter(#actionStream),
        returnValue: _i9.Stream<_i7.DetailViewAction>.empty(),
      ) as _i9.Stream<_i7.DetailViewAction>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeSubscriptions() => super.noSuchMethod(
        Invocation.method(
          #closeSubscriptions,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initState(_i7.DetailViewState? initialState) => super.noSuchMethod(
        Invocation.method(
          #initState,
          [initialState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emitState(_i7.DetailViewState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenState(
    _i10.ReStateCallback<_i7.DetailViewState>? listener, {
    _i10.ReListenerModifier<_i7.DetailViewState>? modifier,
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #listenState,
          [listener],
          {
            #modifier: modifier,
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeStateListener(
          _i10.ReStateCallback<_i7.DetailViewState>? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeState() => super.noSuchMethod(
        Invocation.method(
          #closeState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initAction() => super.noSuchMethod(
        Invocation.method(
          #initAction,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emitAction(_i7.DetailViewAction? action) => super.noSuchMethod(
        Invocation.method(
          #emitAction,
          [action],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenAction(
    _i10.ReActionCallback<_i7.DetailViewAction>? listener, {
    _i10.ReListenerModifier<_i7.DetailViewAction>? modifier,
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #listenAction,
          [listener],
          {
            #modifier: modifier,
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeActionListener(
          _i10.ReActionCallback<_i7.DetailViewAction>? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeActionListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeAction() => super.noSuchMethod(
        Invocation.method(
          #closeAction,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initEvent() => super.noSuchMethod(
        Invocation.method(
          #initEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<T extends _i7.DetailViewEvent>(
    _i10.ReEventCallback<T>? callback, {
    _i10.ReListenerModifier<T>? modifier,
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [callback],
          {
            #modifier: modifier,
            #onError: onError,
            #onDone: onDone,
            #cancelOnError: cancelOnError,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void process(_i7.DetailViewEvent? event) => super.noSuchMethod(
        Invocation.method(
          #process,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeEvent() => super.noSuchMethod(
        Invocation.method(
          #closeEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
