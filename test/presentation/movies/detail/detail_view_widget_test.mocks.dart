// Mocks generated by Mockito 5.0.15 from annotations
// in teste_tokenlab/test/presentation/movies/detail/detail_view_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:domain/entities/movie_detail.dart' as _i9;
import 'package:domain/use_cases/add_favorite_uc.dart' as _i4;
import 'package:domain/use_cases/get_movie_detail_uc.dart' as _i2;
import 'package:domain/use_cases/remove_favorite_uc.dart' as _i5;
import 'package:domain/use_cases/update_movie_favorite_uc.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_tokenlab/presentation/common/states/states.dart' as _i8;
import 'package:teste_tokenlab/presentation/movies/detail/detail_view_bloc.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGetMovieDetailUc_0 extends _i1.Fake
    implements _i2.GetMovieDetailUc {}

class _FakeUpdateMovieFavoriteUc_1 extends _i1.Fake
    implements _i3.UpdateMovieFavoriteUc {}

class _FakeAddFavoriteUc_2 extends _i1.Fake implements _i4.AddFavoriteUc {}

class _FakeRemoveFavoriteUc_3 extends _i1.Fake
    implements _i5.RemoveFavoriteUc {}

class _FakeSink_4<T> extends _i1.Fake implements Sink<T> {}

/// A class which mocks [DetailViewBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetailViewBloc extends _i1.Mock implements _i6.DetailViewBloc {
  MockDetailViewBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get movieId =>
      (super.noSuchMethod(Invocation.getter(#movieId), returnValue: 0) as int);
  @override
  _i2.GetMovieDetailUc get getMovieDetailUc =>
      (super.noSuchMethod(Invocation.getter(#getMovieDetailUc),
          returnValue: _FakeGetMovieDetailUc_0()) as _i2.GetMovieDetailUc);
  @override
  _i3.UpdateMovieFavoriteUc get updateMovieFavoriteUc =>
      (super.noSuchMethod(Invocation.getter(#updateMovieFavoriteUc),
              returnValue: _FakeUpdateMovieFavoriteUc_1())
          as _i3.UpdateMovieFavoriteUc);
  @override
  _i4.AddFavoriteUc get addFavoriteUc =>
      (super.noSuchMethod(Invocation.getter(#addFavoriteUc),
          returnValue: _FakeAddFavoriteUc_2()) as _i4.AddFavoriteUc);
  @override
  _i5.RemoveFavoriteUc get removeFavoriteUc =>
      (super.noSuchMethod(Invocation.getter(#removeFavoriteUc),
          returnValue: _FakeRemoveFavoriteUc_3()) as _i5.RemoveFavoriteUc);
  @override
  Sink<void> get tryStartMovieDetail =>
      (super.noSuchMethod(Invocation.getter(#tryStartMovieDetail),
          returnValue: _FakeSink_4<void>()) as Sink<void>);
  @override
  _i7.Stream<_i8.DetailViewState> get onMovieDetailStateChange =>
      (super.noSuchMethod(Invocation.getter(#onMovieDetailStateChange),
              returnValue: Stream<_i8.DetailViewState>.empty())
          as _i7.Stream<_i8.DetailViewState>);
  @override
  _i7.Stream<_i8.EventActionState> get onEventAction =>
      (super.noSuchMethod(Invocation.getter(#onEventAction),
              returnValue: Stream<_i8.EventActionState>.empty())
          as _i7.Stream<_i8.EventActionState>);
  @override
  Sink<_i9.MovieDetail> get toggleFavorite => (super.noSuchMethod(
      Invocation.getter(#toggleFavorite),
      returnValue: _FakeSink_4<_i9.MovieDetail>()) as Sink<_i9.MovieDetail>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
